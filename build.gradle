buildscript {
    repositories {
        jcenter()
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'

// implicitly applies Java plugin
// implicitly applies Distribution plugin
//
// The Application plugin facilitates creating an executable JVM application. It makes it easy to start the application
// locally during development, and to package the application as a TAR and/or ZIP including operating system specific
// start scripts.
apply plugin: 'application'

group 'com.goobar'
version '0.0.1'

application {
    mainClassName = "io.ktor.server.netty.EngineMain"
    applicationDefaultJvmArgs = [
            '-server',
            '-Djava.awt.headless=true',
            '-Xms128m',
            '-Xmx256m',
            '-XX:+UseG1GC',
            '-XX:MaxGCPauseMillis=100',
            // configure development mode from Gradle System Property
            // will not control development mode if application launched using
            // Kotlin Application build config rather than Gradle build config
            "-Dio.ktor.development=${System.getProperty("io.ktor.development") ?: "false"}"
    ]
}

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // successor to log4j used as SLF4J provider
    // will use resources/logback.xml to configure log output
    implementation "ch.qos.logback:logback-classic:$logback_version"

    // is a core package where most of the application API and implementation is located
    implementation "io.ktor:ktor-server-core:$ktor_version"
    // required for basic usage with Netty
    // supports Netty in embedded mode
    implementation "io.ktor:ktor-server-netty:$ktor_version"

    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
}
